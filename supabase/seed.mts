import { createSeedClient } from '@snaplet/seed';


// You can use @snaplet/copycat to generate fake data for a field, for example:
// ```
// await seed.users([{ email: ({ seed }) => copycat.email(seed) }])
// ```
// More on this in our docs: https://docs.snaplet.dev/core-concepts/seed#inside-the-snapletseed-workflow
import { copycat } from '@snaplet/copycat'

// This is a basic example generated by Snaplet to start you off, check out the docs for where to go from here
// * For more on getting started with @snaplet/seed: https://docs.snaplet.dev/getting-started/quick-start/seed
// * For a more detailed reference: https://docs.snaplet.dev/core-concepts/seed


const seed = await createSeedClient({
    dryRun: process.env.DRY !== '0',
});

await seed.$resetDatabase()
//generic data
await seed.users(x => x(10))
await seed.persons(x => x(10))
await seed.teams(x => x(10))
await seed.profiles(x => x(10))
await seed.players(x => x(10))
await seed.teamCodes(x => x(10))
await seed.exercises(x => x(10))
await seed.tasks(x => x(10))
await seed.programs(x => x(10))
await seed.taskExercises(x => x(10))
await seed.programTasks(x => x(10))


// Run it with: DRY=0 npx tsx seed.mts
